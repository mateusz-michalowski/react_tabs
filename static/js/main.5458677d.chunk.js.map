{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","id","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","className","map","title","cn","href","onClick","handleClickOnTab","content","App","useState","setSelectedTabId","titleTabSelected","ReactDOM","render","document","getElementById"],"mappings":"8LAcaA,EAAO,SAAC,GAAuD,IAClDC,EADHC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cAKpCC,GAJkBJ,EAIWE,EAHjCD,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAOA,MAAOC,EAAK,IAW1C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAF,GACR,IAAQN,EAAcM,EAAdN,GAAIS,EAAUH,EAAVG,MAEZ,OACE,oBACEF,UAAWG,IAAG,CAAE,YAAaN,EAAYJ,KAAOA,IAChD,UAAQ,MAFV,SAKE,mBACEW,KAAI,WAAMX,GACV,UAAQ,UACRY,QAAS,kBAAOZ,IAAOE,GAtBd,SAACI,GACpBA,IAAQF,GACVD,EAAcG,GAqBCO,CAAiBP,IAJtB,SAMGG,KARET,UAgBf,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAYU,cC3CRb,G,kBAAc,CACzB,CAAED,GAAI,QAASS,MAAO,QAASK,QAAS,eACxC,CAAEd,GAAI,QAASS,MAAO,QAASK,QAAS,eACxC,CAAEd,GAAI,QAASS,MAAO,QAASK,QAAS,iBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASf,EAAK,GAAGD,IAA3D,mBAAOE,EAAP,KAAsBe,EAAtB,KAMMC,EAAgB,UAAGjB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAOE,YAA/B,aAAG,EAA4CO,MAErE,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,KAEtB,cAAC,EAAD,CACEjB,KAAMA,EACNC,cAAeA,EACfC,cAdgB,WAAyB,IAAxBG,EAAuB,uDAAZL,EAAK,GACrCgB,EAAiBX,EAAIN,WCnBzBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5458677d.chunk.js","sourcesContent":["import cn from 'classnames';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string\n}\n\ninterface PropsTabs {\n  tabs: Tab[];\n  onTabSelected: (tab: Tab) => void;\n  selectedTabId: string;\n}\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: PropsTabs) => {\n  const getSelectedTab = (id: string) => (\n    tabs.find(tab => tab.id === id) || tabs[0]\n  );\n\n  const selectedTab = getSelectedTab(selectedTabId);\n\n  const handleClickOnTab = (tab: Tab) => {\n    if (tab !== selectedTab) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={cn({ 'is-active': selectedTab.id === id })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => (id !== selectedTabId\n                  && handleClickOnTab(tab))}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string\n}\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab = tabs[0]) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const titleTabSelected = tabs.find(tab => tab.id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${titleTabSelected}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}